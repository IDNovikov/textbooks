                Для запуска тестового сервера:
В папке с сервером в терминале и выполните следующую команду:
npm install

После завершения установки команда:
npm run start

После этого сервер запустится можно зайти на него через браузер открыв в нем адрес http://localhost:3001/. 

            Использование тестового сервера 

Папке public - корневая папка 
Это значит, что любой файл, размещенный в этой папке будет доступен из браузера по прямой ссылке.

В файле /public/page.html сделаем верстку HTML страницы:
<!DOCTYPE html>
<html lang="">
	<head>
		<meta charset="utf-8">
		<title>page</title>
	</head>
	<body>
		page.html works!
	</body>
</html>

Чтобы в браузере обратиться к этой странице нужно 
перейти по адресу http://localhost:3001/page.html - то есть без указания папки public. 

                Выполнение кода через тестовый сервер 

В папке с сервером файл server.js. В этом файле вы можете писать JavaScript,
который будет выполнен на сервере.

Данный файл содержит объект с маршрутами, ключами которого будут адреса,
 а значениями - функции, которые будут выполнены по заходу на соответствующие 
 страницы через браузер.

Давайте посмотрим на примере. Разместите в этом файле следующий код:
export default {
	'/test/': function() {
		return 'hello world';
	}
}

После этого остановите сервер, нажав в консоли сочетание клавиш Ctrl + C. 
Затем перезапустите его командой:
node index.js

Теперь вы можете обратиться через браузер по адресу
 http://localhost:3001/test/. В результате будет выполнена наша функция и в браузер отправится тот текст, который она вернет через return.

Мы можем размещать в этой функции любой код JavaScript. Например, напишем следующее:
export default {
	'/test/': function() {
		let num1 = 1;
		let num2 = 2;
		
		return num1 + num2;
	}
}

                Генерация HTML через тестовый сервер

Обработчики тестового сервера могут также отправлять HTML код:
export default {
	'/test/': function() {
		return '<b>text</b>';
	}
}

Можно также формировать HTML код в цикле:
export default {
	'/test/': function() {
		let str = '<ul>';
		
		for (let i = 1; i 
			< 9; i ++) { 
			str += '<li>' + i 
				+ '</li>'; 
		}
		
		str += '</ul>';
		
		return str;
	}
}

            Заголовки ответа в тестовом сервере

Наш сервер умеет отдавать различные HTTP заголовки.
Для этого применяется второй параметр коллбэка:
export default {
	'/handler/': function(data, 
		resp) { 
		// параметр resp для 
			заголовков 
	}
}

С помощью метода setHeader мы можем отдать любой заголовок. Для примера давайте отдадим MIME тип для JSON:
export default {
	'/handler/': function(data, 
		resp) { 
		resp.setHeader('Content-Type', 
			'application/json'); 
		return '[1,2,3]';
	}
}

            Настройка порта тестового сервера 

По умолчанию сервер запускается на 3001 порту. Мы можем поменять порт в настройках в файле config.js:
export default {
	port: '3001',
}

            Множественный запуск тестового сервера 

Можно запустить несколько копий тестового сервера. Для этого каждой копии нужно указать свой порт.

Для примера давайте запустим первый сервер на 3001 порту:
export default {
	port: '3001',
}

А второй сервер на 3002 порту:
export default {
	port: '3002',
}